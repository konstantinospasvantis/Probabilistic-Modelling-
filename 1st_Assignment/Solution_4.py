# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wU44NkBIgzhwBBdK3gPToaSsGyLO4_Rf

Κάνουμε upload το αρχείο WikiAdjSmall.mat (το οποίο βρίσκεται στον επισυναπτόμενο φάκελο)
"""

from google.colab import files
uploaded = files.upload()

"""Εδω πέρα πήρα το πακέτο networkx, το οποίο είναι χρήσιμο όσον αφορά γράφους, οπότε αφού διαβάζω τον πίνακα γειτνίασης, τον αποθηκεύω πρώτα σαν πίνακα και μετά σαν γράφο."""

import matplotlib.pyplot as plt
import numpy as np
import networkx as nx
from scipy.io import loadmat
wiki_adj_small=loadmat('WikiAdjSmall.mat')
wiki_adj_small = wiki_adj_small["A"].toarray()
A=np.asarray(wiki_adj_small)
G=nx.Graph(A)

"""Χρησιμοποίωντας την εντολή για την εύρεση του μικρότερου μήκους μονοπατιών μεταξύ ενός κόμβου στον γράφο με όλους τους υπόλοιπους κόμβους, βάζω στο λεξίκο που δημιουργώ, πόσα ζευγάρια έχουν μεταξύ τους separation=κάποιο μήκος από 1 έως 20.
Όμως με αυτόν τον τρόπο έχω μετρήσει 2 φορες κάθε ζευγάρι (παίρνοντας σαν δεδομένο ότι αν ο συγγραφέας i γνωρίζει τον συγγραφέα j, τότε ισχύει και το αντίστροφο), οπότε πρέπει να διαρέσω τον αριθμό τψν ζευγαριών που βρήκα με το 2.
"""

miki=dict.fromkeys([1, 2, 3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], 0)
for j in range(1000):
  length=nx.single_source_shortest_path_length(G,j)
  for i in range(1,21):
    metr=sum([1 for k in length.values() if k==i])
    miki[i]=miki[i]+metr
    metr=0

for i in range(1,21):
  miki[i]=(miki[i])/2
print(miki)

"""Σχηματίζω το ζητούμενο διάγραμμα"""

plt.bar(miki.keys(),miki.values(),width=0.9)
plt.ylabel('Number of Author Pairs With \n Certain Separation')
plt.xlabel('Separation')
plt.xticks([item for item in range(1,21)])
plt.rcParams["figure.figsize"] = (13,13)
plt.yticks([item for item in range(0,60000,5000)])
for i in range(1,len(miki.keys())+1):
  plt.text(x=i-0.3,y=miki[i]+0.5,s=miki[i],size=10)

plt.show()

plt.savefig('myplot.png')